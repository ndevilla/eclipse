
const char conica_zpoint_version[] = "$Revision: 1.3 $";
const char conica_zpoint_date[]="$Date: 2002/04/01 01:12:45 $";
int conica_zpoint_main(void * dict);

cmdline_spec conica_zpoint_cmd[] = {
    {'o', "output", "Specify an output file base name", 1, "filename"},
    {'s', "star", "Reference star position (RA DEC)", 1, "'ra dec'"},
    {'m', "mag", "Reference star magnitude", 1, "value"},
    {'l', "locate", "Search size in pixels", 1, "'sx sy'"},
    {'p', "pscale", "Pixel scale in arcsec/pixel", 1, "pixelscale"},
    {'r', "radius", "Photometry radiuses", 1, "'star bgin bgout'"},
    {'c', "check", "Activate check image output", 0, NULL},
    {'C', "circle","Activate circles in check image output", 0, NULL},
    {'d', "dit", "force DIT value", 1, "value"},
    {'O', "offset", "Offset file name", 1, "filename"},
	{'f', "filter", "Force filter name", 1, "filtname"},
	{'F', "flat", "Flat field name", 1, "filename"},
    {0, 0, 0, 0, 0}
};

const char conica_zpoint_man[]=
"\n"
"NAME\n"
"\tzpoint - CONICA night zero points (almost like ISAAC)\n"
"\n"
"SYNOPSIS\n"
"\tconicap zpoint [options] input [-o/--output filename]\n"
"\n"
"DESCRIPTION\n"
"\tPhotometry zero-point acquisitions are done by observing a\n"
"\tstandard star with wide offsets on the detector. The oper­\n"
"\tator  at the instrument is in charge of locating the stan­\n"
"\tdard  star  through  finding  charts  and  positioning  it\n"
"\troughly  at  the  center  of  the array for the very first\n"
"\tframe.  Subsequent frame offsets are indicated in the FITS\n"
"\theader  in  the usual CONICA way (see CONICA documentation\n"
"\tabout FITS header information).\n"
"\n"
"\tzpoint locates first the standard  star  in  the  first\n"
"\tframe. The only mandatory requirement is that the standard\n"
"\tstar should be seen in all input frames.  Another  assump­\n"
"\ttion  used by the locator is that the star is roughly cen­\n"
"\ttered on the first frame. If it is not, the object closest\n"
"\tto  the  center  will  be  used,  if it can be seen on all\n"
"\tframes. If no such object can be found, the command aborts\n"
"\twith an error message.\n"
"\n"
"\tOnce the star is located in all planes, the photometry can\n"
"\tbe computed. The sky needs first to  be  subtracted.  This\n"
"\tis done by subtracting  frames  by pairs:  every  frame is\n"
"\tsky-subtracted by making the difference with the  previous\n"
"\tframe and the next frame. The first and the last frame  in\n"
"\tthe batch have only one neighbouring frame, so  they bring\n"
"\tonly  one measurement. All others bring two measurements.\n" 
"\tThe total number of photometry measurements is thus 2N-2.\n"
"\n"
"\tFlat-field will be applied prior to frame subtraction or\n"
"\tphotometry measurement if a flat-field is provided.\n"
"\n"
"\tPhotometry  is  then  computed using 3 radius definitions,\n"
"\tdefining the circle assumed to contain the star,  and  the\n"
"\tcrown  assumed  to contain only background around the star\n"
"\tfor background subtraction. The observed background should\n"
"\tusually  be around zero if the sky-subtraction worked cor­\n"
"\trectly.\n"
"\n"
"\tThe standard star  is  then  identified  in  the  internal\n"
"\teclipse database from its position. The first input header\n"
"\tis read to retrieve RA and DEC and  the  closest  standard\n"
"\tstar  to  this  position is assumed the one observed.  The\n"
"\tobservation filter is then retrieved from the header,  and\n"
"\tan  association  is applied to link the observation filter\n"
"\tand the magnitude in the database.  The  current  database\n"
"\tcontains  star magnitudes only in bands J, H, K and Ks.\n"
"\tIf no  such  association  can  be  found,  the  command\n"
"\taborts.\n"
"\n"
"\tIf you have used a filter that is unknown to this command,\n"
"\tyou can force the association by using the -f/--filter\n"
"\toption. The string you give will specify the band to be\n"
"\tused to retrieve the standard star information.\n"
"\n"
"\tThe  zero-point  is then computed for each photometry mea­\n"
"\tsurement.  In the short-wavelength mode, the  final  value\n"
"\tis  the  average of all zero-point measurements, minus the\n"
"\thighest and the lowest. In the long-wavelength  mode,  all\n"
"\tmeasurements are taken into account. An average zero-point\n"
"\tand RMS are produced.\n"
"\n"
"\tNotice that this method will not apply to  standard  stars\n"
"\tin  crowded  fields, since it is relying on the assumption\n"
"\tthat the standard star to look for is the brightest object\n"
"\tin the center of the first frame, a condition which is not\n"
"\tfulfilled in that case.\n"
"\n"
"\tSeveral values are fetched from the input file FITS  head­\n"
"\ters.  This  means  that  input files must conform with the\n"
"\tISAAC convention for FITS keywords.  If this  is  not  the\n"
"\tcase,  the  command  will  abort as soon as it cannot find\n"
"\tsome information. You will  be  required  to  provide  the\n"
"\tmissing value(s) directly from the command-line.\n"
"\n"
"OPTIONS\n"
"\t-o or --output 'filename'\n"
"\t\tThis option changes the output file base name.\n"
"\t\tDefault is 'stdstar', which produces a file called\n"
"\t\t'stdstar_zpoint.paf'.\n"
"\n"
"\t-c or --check\n"
"\t\tThis option will generate a check image in the cur­\n"
"\t\trent directory. A check image is an image  composed\n"
"\t\tof  little  vignettes extracted from the input data\n"
"\t\tset. Each vignette is 61x61 pixels in size,  always\n"
"\t\tcentered  on  the  star. If the input batch name is\n"
"\t\t'input', the name of this  image  is  has  actually\n"
"\t\tsucceeded  in locating the star in all frames. This\n"
"\t\tis also useful to check when large  variations  are\n"
"\t\tobserved  in the photometry measurements, to see if\n"
"\n"
"\t-C or --circle\n"
"\t\tThis option activates the drawing of circles in the\n"
"\t\tfirst vignette of the check image, to show where the\n"
"\t\tcircles for aperture photometry computation are\n"
"\t\tsituated.\n"
"\n"
"\t-d or --dit value\n"
"\t\tDeclares the value of the DIT (detector integration\n"
"\t\ttime) in seconds, in case it cannot be found in the\n"
"\t\tFITS headers.\n"
"\n"
"\t-f or --filter filtname\n"
"\t\tThis option forces the filter association in a given\n"
"\t\tfilter. Possible filter names are the filters known\n"
"\t\tto the database, i.e. one of:\n"
"\t\tJ\n"
"\t\tH\n"
"\t\tK\n"
"\t\tKs\n"
"\t\tProviding this option will force the command to discard\n"
"\t\tany header information and act as if the acquisition had\n"
"\t\tbeen made with the specified filter. Using this option\n"
"\t\twith the wrong filter is likely to give creative results.\n"
"\t\tUse with care...\n"
"\n"
"\t-F or --flat filename\n"
"\t\tThis option specifies the name of a flat-field to use\n"
"\t\tto calibrate the frames prior to subtraction (if in SW)\n"
"\t\tand before any photometry measurement is computed.\n"
"\t\tThis option gives either the name of a flat-field\n"
"\t\t(a FITS file), or the name of an ASCII list containing\n"
"\t\tfile names in the first column and frame types in\n"
"\t\tthe second column. If the frame type is a string\n"
"\t\tcontaining the word 'flat' (case-insensitive), the\n"
"\t\tcorresponding frame is used as a flat-field.\n"
"\n"
"\t-l or --locate 'sx sy'\n"
"\t\tSpecifies  the  size  of the search window for fine\n"
"\t\tpositioning. This pass of fine positioning is  only\n"
"\t\tapplied  to  correct for header offset errors, i.e.\n"
"\t\tthe values  indicated  for  sx  and  sy  should  be\n"
"\t\tslightly bigger than the expected offset errors. sx\n"
"\t\tand sy are half-sizes: they are  defaulted  to  50,\n"
"\t\twhich  means  that  input offsets are allowed to be\n"
"\t\tfalse up to +/-50 pixels.\n"
"\n"
"\t-m or --mag value\n"
"\t\tIf the star was correctly  identified  but  has  no\n"
"\t\tmagnitude information for the requested filter, you\n"
"\t\tcan provide a magnitude  value  by  hand  directly.\n"
"\t\tThis will bypass a star search in the database. All\n"
"\t\tcharacteristics of the star in the output file will\n"
"\t\tbe set to 'unknown', but for its magnitude.\n"
"\n"
"\t-O or --offset filename\n"
"\t\tThis  option  allows  the  user to provide an ASCII\n"
"\t\tfile in input for offsets, instead of  having  them\n"
"\t\tread  from the FITS headers. This is useful if your\n"
"\t\tfiles do not conform with the ISAAC convention,  or\n"
"\t\tif  the header offsets are false or absent from the\n"
"\t\theaders. An offset file is an ASCII file containing\n"
"\t\ttwo  columns:  the first column is the offset in X,\n"
"\t\tthe second column is the offset in Y.  Offsets  are\n"
"\t\tsupposed to be given relatively to the first frame.\n"
"\t\tThe first offset should thus be (0,0). If  this  is\n"
"\t\tnot  the  case, the first offset will be subtracted\n"
"\t\tfrom all offsets in the file to yield relative off­\n"
"\t\tsets  to  the first frame. This allows e.g. to pin­\n"
"\t\tpoint the same object in all frames  and  give  the\n"
"\t\tlist  of  positions. By subtracting the position in\n"
"\t\tthe first frames,  all  positions  are  transformed\n"
"\t\tinto relative offsets.\n"
"\n"
"\t-p or --pscale pixelscale\n"
"\t\tThis option forces a pixel scale value to be used\n"
"\t\tfor photometry radii. The value must be given in\n"
"\t\tarcsec/pixel. If no value is provided, the recipe\n"
"\t\twill look into the first input file header and if\n"
"\t\tno value can be identified, fails."
"\n"
"\t-r or --radius 'r1 r2 r3'\n"
"\t\tThis option specifies the radii to use for photome­\n"
"\t\ttry computation. The object is assumed to  be  con­\n"
"\t\ttained  into a disk of radius r1. The background is\n"
"\t\tcomputed as the median pixel of the  crown  defined\n"
"\t\tby  r2,  r3, centered on the object. Default values\n"
"\t\tfor these are r1=30, r2=40, r3=60.\n"
"\n"
"\t-s or --star 'ra dec'\n"
"\t\tThis option specifies RA and DEC  of  the  standard\n"
"\t\tstar  to use if these values cannot be found in the\n"
"\t\theader. Providing  values  with  this  option  will\n"
"\t\toverride any value found in the header.\n"
"\n"
"FILES\n"
"\tThe  input  file  must  be  an  ASCII  list or a FITS cube\n"
"\t(NAXIS=3). An ASCII list contains on one column the  names\n"
"\tof  the  input  FITS  frames  (assumed  to be images, i.e.\n"
"\tNAXIS=2). If a FITS cube is provided,  offset  information\n"
"\tneed to be provided through the -o option.\n"
"\n"
"\tThe  output file is a PAF file, conformant to VLT specifi­\n"
"\tcations. It contains all informations about  the  measure­\n"
"\tments.\n"
"\n"
"\n"
"\n\n";

